openapi: 3.0.0
info:
  title: Student Attendance API
  version: 1.0.0
  description: API for managing classes and student attendance with face recognition
paths:
  /api/auth/login:
    post:
      summary: Login a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Login successful
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 12345
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: user@example.com
                      role:
                        type: string
                        example: student
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  /api/auth/logout:
    post:
      summary: Logout a user
      tags:
        - Auth
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Logged out successfully
  /api/auth/signup:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
                role:
                  type: string
                  example: student
              required:
                - name
                - email
                - password
                - role
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User created successfully
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 12345
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: user@example.com
                      role:
                        type: string
                        example: student
        '400':
          description: Invalid input
  /api/auth/status:
    get:
      summary: Get user authentication status
      tags:
        - Auth
      responses:
        '200':
          description: User is authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  isAuthenticated:
                    type: boolean
                    example: true
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 12345
                      role:
                        type: string
                        example: student
        '401':
          description: Unauthorized
  /api/class/{classId}/students:
    get:
      summary: Get students in a class
      tags:
        - Class
      parameters:
        - name: classId
          in: path
          required: true
          schema:
            type: string
          description: ID of the class
      responses:
        '200':
          description: List of students
          content:
            application/json:
              schema:
                type: object
                properties:
                  students:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 12345
                        name:
                          type: string
                          example: John Doe
                        email:
                          type: string
                          example: john.doe@example.com
        '400':
          description: Missing class ID
  /api/class/create:
    post:
      summary: Create a new class
      tags:
        - Class
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                className:
                  type: string
                  example: Math 101
                description:
                  type: string
                  example: Basic math class
              required:
                - className
      responses:
        '201':
          description: Class created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '401':
          description: Unauthorized
        '403':
          description: Only teachers can create classes
        '400':
          description: Invalid input
  /api/class/join:
    post:
      summary: Join a class using class link
      tags:
        - Class
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                classLink:
                  type: string
                  example: abc12345
              required:
                - classLink
      responses:
        '200':
          description: Successfully joined class
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Joined successfully
        '400':
          description: Missing or invalid class link
        '403':
          description: Only students can join classes
        '404':
          description: Class not found
  /api/class/list:
    get:
      summary: List all classes for the authenticated user
      tags:
        - Class
      responses:
        '200':
          description: List of classes
          content:
            application/json:
              schema:
                type: object
                properties:
                  classes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 12345
                        className:
                          type: string
                          example: Math 101
                        classLink:
                          type: string
                          example: abc12345
  components:
  schemas: {}
